diff --git a/reproject/spherical_intersect/mNaN.h b/reproject/spherical_intersect/mNaN.h
index f8cd61f..3638736 100644
--- reproject/spherical_intersect/mNaN.h
+++ reproject/spherical_intersect/mNaN.h
@@ -4,4 +4,4 @@
 
 #include <math.h>
 
-#define mNaN(x) isnan(x) || !finite(x)
+#define mNaN(x) _isnan(x) || !_finite(x)
diff --git a/reproject/spherical_intersect/overlapArea.c b/reproject/spherical_intersect/overlapArea.c
index 56c7987..ac7061d 100644
--- reproject/spherical_intersect/overlapArea.c
+++ reproject/spherical_intersect/overlapArea.c
@@ -4,6 +4,7 @@
  */
 
 #include <stdio.h>
+#define _USE_MATH_DEFINES
 #include <math.h>
 #include "mNaN.h"
 #include "overlapArea.h"
diff --git a/reproject/spherical_intersect/reproject_slice_c.c b/reproject/spherical_intersect/reproject_slice_c.c
index 424bb86..a2c45f7 100644
--- reproject/spherical_intersect/reproject_slice_c.c
+++ reproject/spherical_intersect/reproject_slice_c.c
@@ -1,7 +1,7 @@
 #include "overlapArea.h"
 #include "reproject_slice_c.h"
 
-static inline double min_4(const double *ptr)
+static _inline double min_4(const double *ptr)
 {
     double retval = ptr[0];
     int i;
@@ -13,7 +13,7 @@ static inline double min_4(const double *ptr)
     return retval;
 }
 
-static inline double max_4(const double *ptr)
+static _inline double max_4(const double *ptr)
 {
     double retval = ptr[0];
     int i;
@@ -25,13 +25,13 @@ static inline double max_4(const double *ptr)
     return retval;
 }
 
-static inline double to_rad(double x)
+static _inline double to_rad(double x)
 {
     return x * 0.017453292519943295;
 }
 
 // Kernel for overlap computation.
-static inline void _compute_overlap(double *overlap,
+static _inline void _compute_overlap(double *overlap,
                                     double *area_ratio,
                                     double *ilon,
                                     double *ilat,
